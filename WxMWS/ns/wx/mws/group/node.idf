<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">DQovKioNCiAqIFNlcGFyYXRvciB0byBiZSBwbGFjZWQgYmV0d2VlbiBwYXJ0cyBvZiBwaG9uZSBu
dW1iZXINCiAqLw0KcHVibGljIHN0YXRpYyBTdHJpbmcgUEhPTkVfUEFSVFNfU0VQQVJBVE9SID0g
IiAiOw0KDQovKioNCiAqIEluZGljYXRvciBmb3IgcGhvbmUgY291bnRyeSBjb2RlDQogKi8NCnB1
YmxpYyBzdGF0aWMgU3RyaW5nIFBIT05FX0NPVU5UUllfQ09ERV9TSUdOID0gIisiOw0KDQoNCnB1
YmxpYyBzdGF0aWMgU3RyaW5nIEdST1VQX05BTUVfQVRUUklCVVRFID0gImdyb3VwTmFtZSI7DQoN
Ci8qKg0KICogU3RhdGljIHNlc3Npb24gZm9yIGFsbCBhY2Nlc3MNCiAqLw0KcHJpdmF0ZSBzdGF0
aWMgSURpcmVjdG9yeVNlc3Npb24gc2Vzc2lvbiA9IERpcmVjdG9yeVN5c3RlbUZhY3RvcnkNCgkJ
LmdldERpcmVjdG9yeVN5c3RlbSgpLmNyZWF0ZVNlc3Npb24oKTsNCg0KDQoNCg0KcHJpdmF0ZSBz
dGF0aWMgZmluYWwgaW50IFBBR0VfU0laRSA9IDEwMDsNCg0KLyoqDQogKiBHZXQgSUQgb2YgYSBk
aXJlY3Rvcnkgc2VydmljZSBmcm9tIGl0cyBuYW1lDQogKiANCiAqIEBwYXJhbSBzZXJ2aWNlTmFt
ZQ0KICogQHJldHVybg0KICovDQpwdWJsaWMgc3RhdGljIFN0cmluZyBnZXREaXJlY3RvcnlTZXJ2
aWNlSURGb3JOYW1lKFN0cmluZyBzZXJ2aWNlTmFtZSkgew0KCUxpc3Q8SURpcmVjdG9yeVNlcnZp
Y2U+IGRzTGlzdCA9IHNlc3Npb24ubGlzdERpcmVjdG9yeVNlcnZpY2VzKCk7DQoJU3RyaW5nIGlk
ID0gbnVsbDsNCglmb3IgKGludCBpID0gMDsgaSA8IGRzTGlzdC5zaXplKCk7IGkrKykgew0KCQlJ
RGlyZWN0b3J5U2VydmljZSBkc0VsZW0gPSBkc0xpc3QuZ2V0KGkpOw0KCQlTdHJpbmcgbmFtZSA9
IGRzRWxlbS5nZXROYW1lKCk7DQoJCWlmIChuYW1lLmVxdWFscyhzZXJ2aWNlTmFtZSkpIHsNCgkJ
CWlkID0gZHNFbGVtLmdldElEKCk7DQoJCQlicmVhazsNCgkJfQ0KCX0NCglyZXR1cm4gaWQ7DQp9
DQoNCg0KLyoqDQogKiBAcGFyYW0gc2VhcmNoU3RyaW5nDQogKiBAcGFyYW0gcmVmaW5lUXVlcnlG
aWVsZHMNCiAqIEBwYXJhbSBwcmluY2lwYWxUeXBlDQogKiBAcGFyYW0gcXVlcnlQYWdlU2l6ZQ0K
ICogQHJldHVybg0KICovDQpwdWJsaWMgc3RhdGljIExpc3Q8SURpcmVjdG9yeVByaW5jaXBhbD4g
c2VhcmNoQWxsRGlyZWN0b3J5U2VydmljZXMoU3RyaW5nIHNlYXJjaFN0cmluZywgIA0KCQlEaXJl
Y3RvcnlTZWFyY2hRdWVyeS5SZWZpbmVRdWVyeUZpZWxkW10gcmVmaW5lUXVlcnlGaWVsZHMsDQoJ
CWludCBwcmluY2lwYWxUeXBlICwgaW50IHF1ZXJ5UGFnZVNpemUpIHsNCgkNCglMaXN0PElEaXJl
Y3RvcnlQcmluY2lwYWw+IHJlc3VsdExpc3QgPSBuZXcgQXJyYXlMaXN0PElEaXJlY3RvcnlQcmlu
Y2lwYWw+KCk7DQoJDQoJTGlzdDxJRGlyZWN0b3J5U2VydmljZT4gZHNMaXN0ID0gc2Vzc2lvbi5s
aXN0RGlyZWN0b3J5U2VydmljZXMoKTsNCglmb3IgKElEaXJlY3RvcnlTZXJ2aWNlIGlEaXJlY3Rv
cnlTZXJ2aWNlIDogZHNMaXN0KSB7DQoJCXJlc3VsdExpc3QuYWRkQWxsKHNlYXJjaERpcmVjdG9y
eVNlcnZpY2UoaURpcmVjdG9yeVNlcnZpY2UuZ2V0SUQoKSwgDQoJCQkJc2VhcmNoU3RyaW5nLCBy
ZWZpbmVRdWVyeUZpZWxkcywgcHJpbmNpcGFsVHlwZSwgcXVlcnlQYWdlU2l6ZSkpOw0KCX0NCgly
ZXR1cm4gcmVzdWx0TGlzdDsNCn0NCg0KDQovKioNCiAqIEBwYXJhbSBkaXJlY3RvcnlTZXJ2aWNl
SUQNCiAqIEBwYXJhbSBzZWFyY2hTdHJpbmcNCiAqIEBwYXJhbSByZWZpbmVRdWVyeUZpZWxkcw0K
ICogCQkJCUFkZGl0aW9uYWwgYXR0cmlidXRlIHRvIHNlYXJjaCwgbWF5IGJlIG51bGwNCiAqIEBw
YXJhbSBwcmluY2lwYWxUeXBlDQogKiBAcGFyYW0gcXVlcnlQYWdlU2l6ZQ0KICogQHJldHVybg0K
ICovDQpwdWJsaWMgc3RhdGljIExpc3Q8SURpcmVjdG9yeVByaW5jaXBhbD4gc2VhcmNoRGlyZWN0
b3J5U2VydmljZShTdHJpbmcgZGlyZWN0b3J5U2VydmljZUlELCANCgkJU3RyaW5nIHNlYXJjaFN0
cmluZywgIERpcmVjdG9yeVNlYXJjaFF1ZXJ5LlJlZmluZVF1ZXJ5RmllbGRbXSByZWZpbmVRdWVy
eUZpZWxkcywNCgkJaW50IHByaW5jaXBhbFR5cGUgLCBpbnQgcXVlcnlQYWdlU2l6ZSkgew0KCUxp
c3Q8SURpcmVjdG9yeVByaW5jaXBhbD4gcmVzdWx0TGlzdCA9IG5ldyBBcnJheUxpc3Q8SURpcmVj
dG9yeVByaW5jaXBhbD4oKTsNCglJRGlyZWN0b3J5UGFnaW5nQ29va2llIGNvb2tpZSA9IHNlc3Np
b24uY3JlYXRlUGFnaW5nQ29va2llKGRpcmVjdG9yeVNlcnZpY2VJRCk7DQoJY29va2llLnNldFN0
YXJ0KDEpOw0KCWNvb2tpZS5zZXRQYWdlU2l6ZShxdWVyeVBhZ2VTaXplKTsNCgkNCgl0cnkgew0K
CQlEaXJlY3RvcnlTZWFyY2hRdWVyeSBxdWVyeSA9IG5ldyBEaXJlY3RvcnlTZWFyY2hRdWVyeShz
ZWFyY2hTdHJpbmcsIC0xLCByZWZpbmVRdWVyeUZpZWxkcyk7DQoJCXdoaWxlICh0cnVlKSB7DQoJ
CQlMaXN0PElEaXJlY3RvcnlQcmluY2lwYWw+IHJlc3VsdExpc3RQYXJ0ID0gc2Vzc2lvbi5zZWFy
Y2hEaXJlY3RvcnkoZGlyZWN0b3J5U2VydmljZUlELCANCgkJCQlwcmluY2lwYWxUeXBlLCBxdWVy
eSwgY29va2llKTsNCgkJCWlmIChyZXN1bHRMaXN0UGFydCAhPSBudWxsKSB7DQoJCQkJcmVzdWx0
TGlzdC5hZGRBbGwocmVzdWx0TGlzdFBhcnQpOw0KCQkJfQ0KCQkJaWYgKGNvb2tpZS5oYXNOZXh0
KCkpDQoJCQkJY29va2llLnBhZ2VGb3J3YXJkKCk7DQoJCQllbHNlDQoJCQkJYnJlYWs7DQoJCX0N
CgkJDQoJfSBmaW5hbGx5IHsNCgkJc2Vzc2lvbi5kZXN0cm95UGFnaW5nQ29va2llKGNvb2tpZSk7
DQoJfQ0KCXJldHVybiByZXN1bHRMaXN0Ow0KfQ0KDQovKioNCiAqIEV4dHJhY3QgbmFtZXMgZnJv
bSBJRGlyZWN0b3J5UHJpbmNpcGFsIGxpc3QgYW5kIHJldHVybnMgdGhlbSBhcyBhbiBhcnJheQ0K
ICogDQogKiBAcGFyYW0gcHJpbmNpcGFsTGlzdA0KICogQHJldHVybg0KICovDQpwdWJsaWMgc3Rh
dGljIFN0cmluZ1tdIGdldFByaW5jaXBhbE5hbWVzKExpc3Q8SURpcmVjdG9yeVByaW5jaXBhbD4g
cHJpbmNpcGFsTGlzdCkgew0KCVN0cmluZ1tdCXByaW5jaXBhbE5hbWVMaXN0ID0gbmV3IFN0cmlu
Z1twcmluY2lwYWxMaXN0LnNpemUoKV07DQoJaW50IHJlc3VsdENvdW50ZXIgPSAwOw0KCWZvciAo
SXRlcmF0b3I8SURpcmVjdG9yeVByaW5jaXBhbD4gaXRlcmF0b3IgPSBwcmluY2lwYWxMaXN0Lml0
ZXJhdG9yKCk7IGl0ZXJhdG9yLmhhc05leHQoKTspIHsNCgkJSURpcmVjdG9yeVByaW5jaXBhbCB1
c2VyID0gKElEaXJlY3RvcnlQcmluY2lwYWwpIGl0ZXJhdG9yDQoJCQkJLm5leHQoKTsNCgkJcHJp
bmNpcGFsTmFtZUxpc3RbcmVzdWx0Q291bnRlcl0gPSB1c2VyLmdldE5hbWUoKTsNCgkJcmVzdWx0
Q291bnRlcisrOw0KCX0NCglyZXR1cm4gcHJpbmNpcGFsTmFtZUxpc3Q7DQp9DQoNCi8qKg0KICog
Q2hlY2sgd2hldGhlciB1c2VyIGV4aXN0cw0KICogDQogKiBAcGFyYW0gdXNlck5hbWUNCiAqIEBy
ZXR1cm4NCiAqLw0KcHVibGljIHN0YXRpYyBib29sZWFuIHVzZXJFeGlzdHMoU3RyaW5nIHVzZXJO
YW1lKSB7DQoJYm9vbGVhbiB1c2VyRXhpc3RzID0gKHNlc3Npb24ubG9va3VwUHJpbmNpcGFsQnlO
YW1lKHVzZXJOYW1lLA0KCQkJSURpcmVjdG9yeVByaW5jaXBhbC5UWVBFX1VTRVIpICE9IG51bGwp
Ow0KCXJldHVybiB1c2VyRXhpc3RzOw0KfQ0KDQovKioNCiAqIENoZWNrIHdoZXRoZXIgcm9sZSBl
eGlzdHMNCiAqIA0KICogQHBhcmFtIHJvbGVOYW1lDQogKiBAcmV0dXJuDQogKi8NCnB1YmxpYyBz
dGF0aWMgYm9vbGVhbiByb2xlRXhpc3RzKFN0cmluZyByb2xlTmFtZSkgew0KCWJvb2xlYW4gcm9s
ZUV4aXN0cyA9IChzZXNzaW9uLmxvb2t1cFByaW5jaXBhbEJ5TmFtZShyb2xlTmFtZSwNCgkJCUlE
aXJlY3RvcnlQcmluY2lwYWwuVFlQRV9ST0xFKSAhPSBudWxsKTsNCglyZXR1cm4gcm9sZUV4aXN0
czsNCn0NCg0KLyoqDQogKiBHZXQgdXNlciBieSBuYW1lDQogKiANCiAqIEBwYXJhbSB1c2VyTmFt
ZQ0KICogQHJldHVybg0KICogQHRocm93cyBEaXJlY3RvcnlFeGNlcHRpb24NCiAqICAgICAgICAg
ICAgIFRocm93biBpZiByb2xlIGNhbm5vdCBiZSBmb3VuZA0KICovDQpwdWJsaWMgc3RhdGljIElE
aXJlY3RvcnlQcmluY2lwYWwgZ2V0VXNlcihTdHJpbmcgdXNlck5hbWUpDQoJCXRocm93cyBEaXJl
Y3RvcnlFeGNlcHRpb24gew0KCUlEaXJlY3RvcnlQcmluY2lwYWwgdXNlciA9IHNlc3Npb24ubG9v
a3VwUHJpbmNpcGFsQnlOYW1lKHVzZXJOYW1lLA0KCQkJSURpcmVjdG9yeVByaW5jaXBhbC5UWVBF
X1VTRVIpOw0KCWlmICh1c2VyID09IG51bGwpDQoJCXRocm93IG5ldyBEaXJlY3RvcnlFeGNlcHRp
b24oTWVzc2FnZXMuSW52YWxpZE9iamVjdElELA0KCQkJCW5ldyBTdHJpbmdbXSB7ICJVc2VyICci
ICsgdXNlck5hbWUgKyAiJyBkb2VzIG5vdCBleGlzdCIgfSk7DQoJcmV0dXJuIHVzZXI7DQp9DQoN
Ci8qKg0KICogUmV0dXJuIGFsbCByb2xlcyBhIHVzZXIgYmVsb25ncyB0bw0KICogQHBhcmFtIHVz
ZXJOYW1lDQogKiBAcmV0dXJuIE5hbWVzIG9mIGFsbCByb2xlcyB0aGUgdXNlciBiZWxvbmdzIHRv
DQogKiBAdGhyb3dzIERpcmVjdG9yeUV4Y2VwdGlvbg0KICovDQpwdWJsaWMgc3RhdGljIFN0cmlu
Z1tdIGdldFVzZXJSb2xlcyhTdHJpbmcgdXNlck5hbWUpDQoJCXRocm93cyBEaXJlY3RvcnlFeGNl
cHRpb24gew0KCUxpc3Q8SURpcmVjdG9yeVJvbGU+IHJvbGVMaXN0ID0gc2Vzc2lvbi5nZXRSb2xl
TWVtYmVyc2hpcChnZXRVc2VyKHVzZXJOYW1lKS5nZXRJRCgpKTsNCglTdHJpbmdbXSByb2xlcyA9
IG5ldyBTdHJpbmdbcm9sZUxpc3Quc2l6ZSgpXTsNCglpbnQgaT0wOw0KCWZvciAoSURpcmVjdG9y
eVJvbGUgcm9sZSA6IHJvbGVMaXN0KSB7DQoJCXJvbGVzW2ldID0gcm9sZS5nZXROYW1lKCk7DQoJ
CWkrKzsNCgl9DQoJcmV0dXJuIHJvbGVzOw0KfQ0KDQoNCi8qKg0KICogUmV0dXJuIGFsbCBncm91
cHMgYSB1c2VyIGJlbG9uZ3MgdG8NCiAqIEBwYXJhbSB1c2VyTmFtZQ0KICogQHJldHVybiBOYW1l
cyBvZiBhbGwgZ3JvdXBzIHRoZSB1c2VyIGJlbG9uZ3MgdG8NCiAqIEB0aHJvd3MgRGlyZWN0b3J5
RXhjZXB0aW9uDQogKi8NCnB1YmxpYyBzdGF0aWMgU3RyaW5nW10gZ2V0VXNlckdyb3VwcyhTdHJp
bmcgdXNlck5hbWUpDQoJCXRocm93cyBEaXJlY3RvcnlFeGNlcHRpb24gew0KCUxpc3Q8SURpcmVj
dG9yeUdyb3VwPiBncm91cExpc3QgPSBzZXNzaW9uLmdldEdyb3VwTWVtYmVyc2hpcChnZXRVc2Vy
KHVzZXJOYW1lKS5nZXRJRCgpKTsNCglTdHJpbmdbXSBncm91cHMgPSBuZXcgU3RyaW5nW2dyb3Vw
TGlzdC5zaXplKCldOw0KCWludCBpPTA7DQoJZm9yIChJRGlyZWN0b3J5R3JvdXAgZ3JvdXAgOiBn
cm91cExpc3QpIHsNCgkJZ3JvdXBzW2ldID0gZ3JvdXAuZ2V0TmFtZSgpOw0KCQlpKys7DQoJfQ0K
CXJldHVybiBncm91cHM7DQp9DQoNCg0KLyoqDQogKiBHZXQgcm9sZSBieSBuYW1lDQogKiANCiAq
IEBwYXJhbSByb2xlTmFtZQ0KICogQHJldHVybg0KICogQHRocm93cyBEaXJlY3RvcnlFeGNlcHRp
b24NCiAqICAgICAgICAgICAgIFRocm93biBpZiByb2xlIGNhbm5vdCBiZSBmb3VuZA0KICovDQpw
dWJsaWMgc3RhdGljIElEaXJlY3RvcnlQcmluY2lwYWwgZ2V0Um9sZShTdHJpbmcgcm9sZU5hbWUp
DQoJCXRocm93cyBEaXJlY3RvcnlFeGNlcHRpb24gew0KCUlEaXJlY3RvcnlQcmluY2lwYWwgcm9s
ZSA9IHNlc3Npb24ubG9va3VwUHJpbmNpcGFsQnlOYW1lKHJvbGVOYW1lLA0KCQkJSURpcmVjdG9y
eVByaW5jaXBhbC5UWVBFX1JPTEUpOw0KCWlmIChyb2xlID09IG51bGwpDQoJCXRocm93IG5ldyBE
aXJlY3RvcnlFeGNlcHRpb24oTWVzc2FnZXMuSW52YWxpZE9iamVjdElELA0KCQkJCW5ldyBTdHJp
bmdbXSB7ICJSb2xlICciICsgcm9sZU5hbWUgKyAiJyBkb2VzIG5vdCBleGlzdCIgfSk7DQoJcmV0
dXJuIHJvbGU7DQp9DQoNCi8qKg0KICogR2V0IGdyb3VwIGJ5IG5hbWUNCiAqIA0KICogQHBhcmFt
IGdyb3VwTmFtZQ0KICogQHJldHVybg0KICogQHRocm93cyBEaXJlY3RvcnlFeGNlcHRpb24NCiAq
ICAgICAgICAgICAgIFRocm93biBpZiByb2xlIGNhbm5vdCBiZSBmb3VuZA0KICovDQpwdWJsaWMg
c3RhdGljIElEaXJlY3RvcnlQcmluY2lwYWwgZ2V0R3JvdXAoU3RyaW5nIGdyb3VwTmFtZSkNCgkJ
dGhyb3dzIERpcmVjdG9yeUV4Y2VwdGlvbiB7DQoJSURpcmVjdG9yeVByaW5jaXBhbCByb2xlID0g
c2Vzc2lvbi5sb29rdXBQcmluY2lwYWxCeU5hbWUoZ3JvdXBOYW1lLA0KCQkJSURpcmVjdG9yeVBy
aW5jaXBhbC5UWVBFX0dST1VQKTsNCglpZiAocm9sZSA9PSBudWxsKQ0KCQl0aHJvdyBuZXcgRGly
ZWN0b3J5RXhjZXB0aW9uKE1lc3NhZ2VzLkludmFsaWRPYmplY3RJRCwNCgkJCQluZXcgU3RyaW5n
W10geyAiR3JvdXAgJyIgKyBncm91cE5hbWUgKyAiJyBkb2VzIG5vdCBleGlzdCIgfSk7DQoJcmV0
dXJuIHJvbGU7DQp9DQoNCi8qKg0KICogQWRkIG11bHRpcGxlIHVzZXJzIHRvIG9uZSByb2xlDQog
KiANCiAqIEBwYXJhbSByb2xlTmFtZQ0KICogQHBhcmFtIHVzZXJOYW1lcw0KICovDQpwcml2YXRl
IHN0YXRpYyB2b2lkIGFkZFVzZXJzVG9Sb2xlKFN0cmluZyByb2xlTmFtZSwgU3RyaW5nW10gdXNl
ck5hbWVzKSB7DQoJSURpcmVjdG9yeVByaW5jaXBhbCByb2xlID0gZ2V0Um9sZShyb2xlTmFtZSk7
DQoJZm9yIChTdHJpbmcgdXNlck5hbWUgOiB1c2VyTmFtZXMpIHsNCgkJSURpcmVjdG9yeVByaW5j
aXBhbCB1c2VyID0gZ2V0VXNlcih1c2VyTmFtZSk7DQoJCXNlc3Npb24uYWRkUHJpbmNpcGFsVG9S
b2xlKHVzZXIuZ2V0SUQoKSwgcm9sZS5nZXRJRCgpKTsNCgl9DQp9DQoNCi8qKg0KICogUmVtb3Zl
IG11bHRpcGxlIHVzZXJzIGZyb20gb25lIHJvbGUNCiAqIA0KICogQHBhcmFtIHJvbGVOYW1lDQog
KiBAcGFyYW0gdXNlck5hbWVzDQogKi8NCnByaXZhdGUgc3RhdGljIHZvaWQgcmVtb3ZlVXNlcnNG
cm9tUm9sZShTdHJpbmcgcm9sZU5hbWUsIFN0cmluZ1tdIHVzZXJOYW1lcykgew0KCUlEaXJlY3Rv
cnlQcmluY2lwYWwgcm9sZSA9IGdldFJvbGUocm9sZU5hbWUpOw0KCWZvciAoU3RyaW5nIHVzZXJO
YW1lIDogdXNlck5hbWVzKSB7DQoJCUlEaXJlY3RvcnlQcmluY2lwYWwgdXNlciA9IGdldFVzZXIo
dXNlck5hbWUpOw0KCQlzZXNzaW9uLnJlbW92ZVByaW5jaXBhbEZyb21Sb2xlKHVzZXIuZ2V0SUQo
KSwgcm9sZS5nZXRJRCgpKTsNCgl9DQp9DQoNCi8qKg0KICogQWRkIG11bHRpcGxlIHJvbGVzIHRv
IHVzZXINCiAqIA0KICogQHBhcmFtIHVzZXJOYW1lDQogKiBAcGFyYW0gcm9sZXMNCiAqLw0KcHJp
dmF0ZSBzdGF0aWMgdm9pZCBhZGRSb2xlc1RvVXNlcihTdHJpbmcgdXNlck5hbWUsIFN0cmluZ1td
IHJvbGVzKSB7DQoJSURpcmVjdG9yeVByaW5jaXBhbCB1c2VyID0gZ2V0VXNlcih1c2VyTmFtZSk7
DQoJZm9yIChTdHJpbmcgcm9sZU5hbWUgOiByb2xlcykgew0KCQlJRGlyZWN0b3J5UHJpbmNpcGFs
IHJvbGUgPSBnZXRSb2xlKHJvbGVOYW1lKTsNCgkJc2Vzc2lvbi5hZGRQcmluY2lwYWxUb1JvbGUo
dXNlci5nZXRJRCgpLCByb2xlLmdldElEKCkpOw0KCX0NCn0NCg0KLyoqDQogKiBSZW1vdmUgbXVs
dGlwbGUgcm9sZXMgZnJvbSB1c2VyDQogKiANCiAqIEBwYXJhbSB1c2VyTmFtZQ0KICogQHBhcmFt
IHJvbGVzDQogKi8NCnByaXZhdGUgc3RhdGljIHZvaWQgcmVtb3ZlUm9sZXNGcm9tVXNlcihTdHJp
bmcgdXNlck5hbWUsIFN0cmluZ1tdIHJvbGVzKSB7DQoJSURpcmVjdG9yeVByaW5jaXBhbCB1c2Vy
ID0gZ2V0VXNlcih1c2VyTmFtZSk7DQoJZm9yIChTdHJpbmcgcm9sZU5hbWUgOiByb2xlcykgew0K
CQlJRGlyZWN0b3J5UHJpbmNpcGFsIHJvbGUgPSBnZXRSb2xlKHJvbGVOYW1lKTsNCgkJc2Vzc2lv
bi5yZW1vdmVQcmluY2lwYWxGcm9tUm9sZSh1c2VyLmdldElEKCksIHJvbGUuZ2V0SUQoKSk7DQoJ
fQ0KfQ0KDQoNCi8qKg0KICogQWRkIG11bHRpcGxlIHVzZXJzIHRvIG9uZSByb2xlDQogKiANCiAq
IEBwYXJhbSBncm91cE5hbWUNCiAqIEBwYXJhbSB1c2VyTmFtZXMNCiAqLw0KcHJpdmF0ZSBzdGF0
aWMgdm9pZCBhZGRVc2Vyc1RvR3JvdXAoU3RyaW5nIGdyb3VwTmFtZSwgU3RyaW5nW10gdXNlck5h
bWVzKSB7DQoJSURpcmVjdG9yeVByaW5jaXBhbCBncm91cCA9IGdldEdyb3VwKGdyb3VwTmFtZSk7
DQoJZm9yIChTdHJpbmcgdXNlck5hbWUgOiB1c2VyTmFtZXMpIHsNCgkJSURpcmVjdG9yeVByaW5j
aXBhbCB1c2VyID0gZ2V0VXNlcih1c2VyTmFtZSk7DQoJCXNlc3Npb24uYWRkUHJpbmNpcGFsVG9H
cm91cCh1c2VyLmdldElEKCksIGdyb3VwLmdldElEKCkpOw0KCX0NCn0NCg0KLyoqDQogKiBSZW1v
dmUgbXVsdGlwbGUgdXNlcnMgZnJvbSBvbmUgZ3JvdXANCiAqIA0KICogQHBhcmFtIGdyb3VwTmFt
ZQ0KICogQHBhcmFtIHVzZXJOYW1lcw0KICovDQpwcml2YXRlIHN0YXRpYyB2b2lkIHJlbW92ZVVz
ZXJzRnJvbUdyb3VwKFN0cmluZyBncm91cE5hbWUsIFN0cmluZ1tdIHVzZXJOYW1lcykgew0KCUlE
aXJlY3RvcnlQcmluY2lwYWwgZ3JvdXAgPSBnZXRHcm91cChncm91cE5hbWUpOw0KCWZvciAoU3Ry
aW5nIHVzZXJOYW1lIDogdXNlck5hbWVzKSB7DQoJCUlEaXJlY3RvcnlQcmluY2lwYWwgdXNlciA9
IGdldFVzZXIodXNlck5hbWUpOw0KCQlzZXNzaW9uLnJlbW92ZVByaW5jaXBhbEZyb21Hcm91cCh1
c2VyLmdldElEKCksIGdyb3VwLmdldElEKCkpOw0KCX0NCn0NCg0KLyoqDQogKiBBZGQgbXVsdGlw
bGUgZ3JvdXBzIHRvIHVzZXINCiAqIA0KICogQHBhcmFtIHVzZXJOYW1lDQogKiBAcGFyYW0gZ3Jv
dXBzDQogKi8NCnByaXZhdGUgc3RhdGljIHZvaWQgYWRkR3JvdXBzVG9Vc2VyKFN0cmluZyB1c2Vy
TmFtZSwgU3RyaW5nW10gZ3JvdXBzKSB7DQoJSURpcmVjdG9yeVByaW5jaXBhbCB1c2VyID0gZ2V0
VXNlcih1c2VyTmFtZSk7DQoJZm9yIChTdHJpbmcgZ3JvdXBzTmFtZSA6IGdyb3Vwcykgew0KCQlJ
RGlyZWN0b3J5UHJpbmNpcGFsIGdyb3VwID0gZ2V0R3JvdXAoZ3JvdXBzTmFtZSk7DQoJCXNlc3Np
b24uYWRkUHJpbmNpcGFsVG9Sb2xlKHVzZXIuZ2V0SUQoKSwgZ3JvdXAuZ2V0SUQoKSk7DQoJfQ0K
fQ0KDQovKioNCiAqIFJlbW92ZSBtdWx0aXBsZSByb2xlcyBmcm9tIHVzZXINCiAqIA0KICogQHBh
cmFtIHVzZXJOYW1lDQogKiBAcGFyYW0gZ3JvdXBzDQogKi8NCnByaXZhdGUgc3RhdGljIHZvaWQg
cmVtb3ZlR3JvdXBzRnJvbVVzZXIoU3RyaW5nIHVzZXJOYW1lLCBTdHJpbmdbXSBncm91cHMpIHsN
CglJRGlyZWN0b3J5UHJpbmNpcGFsIHVzZXIgPSBnZXRVc2VyKHVzZXJOYW1lKTsNCglmb3IgKFN0
cmluZyBncm91cE5hbWUgOiBncm91cHMpIHsNCgkJSURpcmVjdG9yeVByaW5jaXBhbCBncm91cCA9
IGdldEdyb3VwKGdyb3VwTmFtZSk7DQoJCXNlc3Npb24ucmVtb3ZlUHJpbmNpcGFsRnJvbVJvbGUo
dXNlci5nZXRJRCgpLCBncm91cC5nZXRJRCgpKTsNCgl9DQp9DQoNCi8qKg0KICogQnVpbGQgcGhv
bmUgbnVtYmVyIGZyb20gaXRzIHN1Yi1wYXJ0cw0KICogDQogKiBAcGFyYW0gYXR0cmlidXRlc01h
cA0KICogQHJldHVybg0KICovDQpwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0UGhvbmVOdW1iZXIo
TWFwPFN0cmluZywgT2JqZWN0PiBhdHRyaWJ1dGVzTWFwKSB7DQoJU3RyaW5nIHBob25lID0gbnVs
bDsNCglwaG9uZSA9IHBob25lTnVtYmVyUGFydCgNCgkJCShTdHJpbmcpIGF0dHJpYnV0ZXNNYXAN
CgkJCQkJLmdldChJRGlyZWN0b3J5UHJpbmNpcGFsLkFUVFJfTkFNRVMuUFJPRklMRV9QSE9ORTFf
Q09VTlRSWV9DT0RFKSwNCgkJCXRydWUpDQoJCQkrIHBob25lTnVtYmVyUGFydCgNCgkJCQkJKFN0
cmluZykgYXR0cmlidXRlc01hcA0KCQkJCQkJCS5nZXQoSURpcmVjdG9yeVByaW5jaXBhbC5BVFRS
X05BTUVTLlBST0ZJTEVfUEhPTkUxX0FSRUFDT0RFKSwNCgkJCQkJdHJ1ZSkNCgkJCSsgcGhvbmVO
dW1iZXJQYXJ0KA0KCQkJCQkoU3RyaW5nKSBhdHRyaWJ1dGVzTWFwDQoJCQkJCQkJLmdldChJRGly
ZWN0b3J5UHJpbmNpcGFsLkFUVFJfTkFNRVMuUFJPRklMRV9QSE9ORTEpLA0KCQkJCQl0cnVlKQ0K
CQkJKyBwaG9uZU51bWJlclBhcnQoDQoJCQkJCShTdHJpbmcpIGF0dHJpYnV0ZXNNYXANCgkJCQkJ
CQkuZ2V0KElEaXJlY3RvcnlQcmluY2lwYWwuQVRUUl9OQU1FUy5QUk9GSUxFX1BIT05FMV9FWFRF
TlNJT04pLA0KCQkJCQlmYWxzZSk7DQoJaWYgKCFwaG9uZS5zdGFydHNXaXRoKFBIT05FX0NPVU5U
UllfQ09ERV9TSUdOKSkNCgkJcGhvbmUgPSBQSE9ORV9DT1VOVFJZX0NPREVfU0lHTiArIHBob25l
Ow0KCXJldHVybiBwaG9uZS50cmltKCk7DQp9DQoNCi8qKg0KICogQXBwZW5kIHBhcnQgb2YgdGhl
IHBob25lIG51bWJlciwgaWYgaXQgaXMgZGVmaW5lZCwgb3IgYW4gZW1wdHkgc3RyaW5nDQogKiAN
CiAqIEBwYXJhbSBwYXJ0DQogKiAgICAgICAgICAgIFBhcnQgb2YgdGhlIHBob25lIG51bWJlciAo
Y291bnRyeSBjb2RlLCBhcmVhIGNvZGUsIG1haW4gcGFydCwNCiAqICAgICAgICAgICAgZXh0ZW5z
aW9uKSB0byByZXR1cm5lZA0KICogQHBhcmFtIGFkZFNlcGFyYXRvcg0KICogICAgICAgICAgICBT
aG91bGQgc2VwYXJhdG9yICh7QHZhbHVlIFBIT05FX1BBUlRTX1NFUEFSQVRPUn0pIGJlIGFwcGVu
ZGVkPw0KICogQHJldHVybg0KICovDQpwcml2YXRlIHN0YXRpYyBTdHJpbmcgcGhvbmVOdW1iZXJQ
YXJ0KFN0cmluZyBwYXJ0LCBib29sZWFuIGFkZFNlcGFyYXRvcikgew0KCVN0cmluZyByZXR1cm5T
dHJpbmcgPSBudWxsOw0KCWlmIChwYXJ0ICE9IG51bGwpIHsNCgkJcmV0dXJuU3RyaW5nID0gcGFy
dDsNCgkJaWYgKGFkZFNlcGFyYXRvcikNCgkJCXBhcnQgPSBwYXJ0ICsgUEhPTkVfUEFSVFNfU0VQ
QVJBVE9SOw0KCX0gZWxzZQ0KCQlyZXR1cm5TdHJpbmcgPSAiIjsNCglyZXR1cm4gcmV0dXJuU3Ry
aW5nOw0KfQ0KDQovKioNCiAqIFJldHVybnMgdHJ1ZSBpZiAiZW50cnkiIGlzIGZvdW5kIGluIGFs
bCBsaXN0cw0KICogDQogKiBAcGFyYW0gZW50cnkNCiAqIEBwYXJhbSBsaXN0T2ZMaXN0cw0KICog
QHJldHVybg0KICovDQpwcml2YXRlIHN0YXRpYyBib29sZWFuIGlzSW5BbGxMaXN0cyhTdHJpbmcg
ZW50cnksDQoJCUFycmF5TGlzdDxBcnJheUxpc3Q+IGxpc3RPZkxpc3RzKSB7DQoJZm9yIChpbnQg
aSA9IDA7IGkgPCBsaXN0T2ZMaXN0cy5zaXplKCk7IGkrKykNCgkJaWYgKCFsaXN0T2ZMaXN0cy5n
ZXQoaSkuY29udGFpbnMoZW50cnkpKQ0KCQkJcmV0dXJuIGZhbHNlOw0KCXJldHVybiB0cnVlOw0K
fQ0KDQovKioNCiAqIERldGVybWluZSB3aGljaCBsaXN0IG9mIGxpc3RzIGlzIHRoZSBzbWFsbGVz
dCBhbmQgcmV0dXJuIGl0cyBpbmRleA0KICogDQogKiBAcGFyYW0gbGlzdE9mTGlzdHMNCiAqIEBy
ZXR1cm4NCiAqLw0KcHJpdmF0ZSBzdGF0aWMgaW50IGdldEluZGV4U21hbGxlc3RMaXN0KEFycmF5
TGlzdDxBcnJheUxpc3Q+IGxpc3RPZkxpc3RzKSB7DQoJaW50IGluZGV4ID0gMDsNCglpbnQgc2l6
ZSA9IGxpc3RPZkxpc3RzLmdldCgwKS5zaXplKCk7DQoJZm9yIChpbnQgaSA9IDE7IGkgPCBsaXN0
T2ZMaXN0cy5zaXplKCk7IGkrKykgew0KCQlpZiAobGlzdE9mTGlzdHMuZ2V0KGkpLnNpemUoKSA8
IHNpemUpIHsNCgkJCWluZGV4ID0gaTsNCgkJCXNpemUgPSBsaXN0T2ZMaXN0cy5nZXQoaSkuc2l6
ZSgpOw0KCQl9DQoJfQ0KCXJldHVybiBpbmRleDsNCn0NCg0KLyoqDQogKiBTZW5kIG1lc3NhZ2Ug
dG8gSm91bnJuYWwgbG9nZ2VyDQogKiANCiAqIEBwYXJhbSBtZXNzYWdlDQogKi8NCnByaXZhdGUg
c3RhdGljIHZvaWQgbG9nKFN0cmluZyBtZXNzYWdlKSB7DQoJY29tLndtLnV0aWwuSm91cm5hbExv
Z2dlci5sb2coMywgOTAsDQoJCQljb20ud20udXRpbC5Kb3VybmFsTG9nZ2VyLlZFUkJPU0UxLCBu
ZXcgT2JqZWN0W10geyBtZXNzYWdlIH0pOw0KfQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0K
</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.webmethods.sc.StringUtils</value>
    <value>com.webmethods.sc.directory.*</value>
    <value>java.util.Iterator</value>
    <value>java.util.List</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Hashtable</value>
    <value>java.util.Map</value>
    <value>java.util.Set</value>
  </array>
</Values>
